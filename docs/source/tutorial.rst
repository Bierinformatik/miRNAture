========
Tutorial
========

Through this step-by-step tutorial you could make use of key options from
``miRNAture`` to annotate the miR-181 family on selected contigs from the
coelacanth (*Latimeria chalumnae*). All the required files to execute this
tutorial are included in the ``miRNAture`` source files in the
`miRNAture/Tutorial` folder.

Annotating miR-181 on coelacanth
********************************

.. figure:: coel.jpg
    :width: 320px
    :align: center
    :height: 116px
    :alt: Coelacanth image
    :figclass: align-center
    
    *Latimeria chalumnae* [#latimeria]_. 

Based on the miRNA annotation retrieved from ``Ensembl`` release 107, the
coelacanth genome (`LatCha1`) featured 4 miR-181 locus distributed along 2 contigs, as follows: 


==============  ============  ============ ============
  Contigs        Length (Mb)  Numb. miRNAs miR-181 loci
==============  ============  ============ ============
JH126572.1       5.981           2            2
JH127371.1       0.248           3            2
==============  ============  ============ ============

The main goal is the identification of the miR-181 loci on described contigs. To
do so, the `Tutorial` folder contained all the input files in `Data/`, a
pre-defined wrapper to ``miRNAture`` on `Code/`. This `bash` script will create a
`Results/` folder where all predictions will stored. As you can imagine,
homology comparisons are prone to create a high number of input and output
files, however with ``miRNAture`` those tasks are handled automatically for expert
and non-expert users, letting to be focused on well-curated candidates at the end 
of the pipeline. Life is too short to perform all of those steps by hand!.

Folder structure
=================

On the ``miRNAture`` folder, just enter to the ``Tutorial/`` folder::
    
    $ cd Tutorial/

Which looks like::

    Tutorial/
    ├── Code
    │   ├── list_miRNAs_to_search.txt
    │   ├── Dataset_mirnature_tutorial/
    │   ├── tutorial_test_selected_models_v1.1.sh
    │   └── User_Test_Data/
    ├── Data
        ├── latimeria_chalumnae_genome.fa
        └── QueriesToTest/
    
The ``Tutorial`` folder is composed by the subfolders: ``Code/``, where all the
necessary scripts to run ``miRNAture`` are located. ``Data/`` keeps the
described contigs from coelacanth in a multi-fasta
file:``latimeria_chalumnae_genome.fa``. In the same folder, in
``QueriesToTest/`` microRNA annotations from 11 metazoans [#species]_ were
provided as queries.

.. note::
    Together with the query files, the file `queries_description.txt` is required to
    control which dataset of sequences that will be used by the `blastn` comparisons. Three
    columns are needed to be recognized:
    
    <Name_fasta_file.fa> miRNA <Origin_of_sequence>
    
    The first one corresponds to the file name, the second one must be miRNA, the third
    one is the name of the source specie in the format: `Genera specie`. If you do not know
    the source, a valid name would be: Unknown specie. If ommited, ``miRNAture`` will create
    automatically this file using all fasta files in this folder with an Unknown origin.

A ``Results/`` folder will be created to contain all the output files generated by ``miRNAture``.

Input files
===========
To run ``miRNAture`` just go directly to ``Code/`` folder::

    $ cd Code/

In this path, the ``tutorial_test_selected_models_v1.1.sh`` file is ``bash``
script that will organize all our code to run ``miRNAture``. This way is
preferred in terms of reproducibility means of your computational experiments.
This code will give you a general idea how to run ``miRNAture``, let's explain
this in detail:

.. code-block:: bash
    
    #!/bin/bash

    current=$( pwd )
    specie_tag="Lach"
    specie_genome="$current/../Data/latimeria_chalumnae_genome.fa"
    specie_name="Latimeria_chalumnae"

    workdir="$current/../Results"
    mode="blast,rfam,mirbase,hmm,final"
    strategy="5,6,ALL"
    blast_queries_folder="$current/../Data/QueriesToTest"
    #user_models="$current/User_Test_Data"
    data_precalculated_folder="$current/Dataset_mirnature_tutorial"
    sublistcms="${current}/list_miRNAs_to_search.txt"

    ## Temporal ###
    mirfixF="/homes/biertank/cristian/Projects/MIRfix/scripts/MIRfix.py"
    cd /homes/biertank/cristian/Projects/miRNAture_v1/
    mirnature_program="script/miRNAture"
    ####
    # Run miRNAture complete
    miRNAture -stage complete -mirfix_path ${mirfixF} \
              -sublist ${sublistcms} -nbitscore_cut 0.32 \
              -dataF ${data_precalculated_folder} \
              -speG ${specie_genome} -speN ${specie_name} \
              -speT ${specie_tag} -w ${workdir} \
              -m ${mode} -pe 1 -str ${strategy} \
              -blastq ${blast_queries_folder} \
              -rep relax,150,100

Activate the ``conda`` environment called `mirnature`. The installation and
activation of this environment is required previously to run ``miRNAture``. 
See Installation section to get ``miRNAture`` executables in your system. To
be activated just run with ``conda`` or ``mamba``::
    
    $ mamba activate mirnature

To help to reproduce the experiment and identify easily the values of each flag,
just assign all values at the beginning of the code. For this experiment, the
following are the important parameters (flags indicated in parenthesis):

        * Processing stage (``-stage``): Running stage on ``miRNAture``. The
          ``complete`` stage will run all the stages. To run step by step, this
          flag accepts: ``homology``, (``no_homology``), ``validation``,
          ``evaluation`` and ``summarise``. You should run all of them, except
          ``no_homology`` [#nohomology]_, in this order to obtain the same final
          results.
        * Subset of miRNA models to run (``-sublist``): Subset of miRNA families
          references to be searched on the target sequence. See
          ``list_miRNAs_to_search.txt`` file as an example. If not provided, all
          miRNA miRBase and RFAM models located on the `pre-calculated data` folder, 
          see below, will be searched. 
        * Normalized Bitscore (nbitscore) threshold for ``Rfam`` 
          searches (``nbitscore_cut``). Current ``Rfam`` threshold is 1.00. As
          suggested by the ``miRNAture`` publication this value is 0.32.
        * Pre-calculated data location (``-dataF``): Location of pre-calculated
          data required by ``miRNAture``. It included hidden Markov and
          covariance models from miRBase v.22.1 and Rfam v.14.4. Additionally
          curated miRBase files to annotate mature sequences at the
          ``validation`` stage [#ImportantNote]_.
        * Specie genome (``-speG``): Target sequence to search microRNAs.
        * Specie name (``-speN``): Scientific name of the specie which belongs
          the target sequence(s).
        * Specie tag (``-speT``): Tag of the specie name to be identified over
          the experiment. We suggested taking the first two letters from the
          Genera joined with the first two from the specie (i.e `Homo sapiens` =
          Hosa).
        * Working directory (``-w``): Output directory, final path of
          ``miRNAture`` results.
        * Running mode (``-m``): Select at least one, or any combination of the
          miRNA search strategies between: ``blast``, ``hmm``, ``rfam``,
          ``mirnase`` and ``user``. To merge the complete results from those
          homology search modes, write at the end ``final``.
        * Parallel jobs using ``GNU parallel`` :cite:`Tange:2022` (``-pe``):
          Activate (1) or not (0).
        * Blast strategies (``-str``): Write the numbers of desired ``blastn``
          strategies. Possible strategies are: ``1,2,3,4,5,6``. To merge all
          results put at the end ``ALL``. 
        * Path of ``blastn`` queries (``-blastq``): Declare the path of
          annotated query miRNAs. In this case is enough to indicate the folder name.
        * Homology repetition detection (``-rep``): Setup number of maximum loci
          number that will be evaluated by the mature annotation stage. By
          default, ``miRNAture`` will detect miRNA families that report high number
          of loci (> 200 loci). Then, it will select the top 100 candidates in
          terms of alignment scores, as candidates for the validation stage
          (``default,200,100``). Modify this values using:
          ``relax,Number_Loci,Candidates_to_evaluate``.

.. note::
    The list of complete flags can be found typing: ``miRNAture -h`` or ``miRNAture -man``.

With described command line parameters, we are going to search on described
coelacanth contigs using the parallel option and lowering the threshold value
for candidates from ``Rfam`` searches.

* 4079 miRNA sequences annotated on 11 deuterostomes using 2 blastn strategies.
* 2 mir-181 HMM and covariance models from ``Rfam`` (RF00076) and ``miRBase`` (MIPF0000007).

Running ``miRNAture``
=====================

Then, run ``miRNAture`` through this script::

    $ ./tutorial_test_selected_models_v1.1.sh


Results
======= 

On the ``Results/`` folder, ``miRNAture`` processed all candidates. The folder
structure is always the same as follows::

    .
    ├── Final_miRNA_evaluation/
    ├── miRNA_prediction/
    ├── miRNAture_configuration_Lach.yaml
    ├── miRNA_validation/
    └── TemporalFiles/

There are four folders and one yaml file. Each folder reflects the processing steps selected
by the user, as follows::

    miRNA_prediction/ -> homology
    miRNA_validation/ -> validation
    Final_miRNA_evaluation/ -> evaluate and summarise

When selected ``complete`` all of described folders are generated automatically
and in the correct order. 

.. note::
    For the impatients, final set of candidates will be
    located on the ``Final_miRNA_evaluation/`` folder in ``BED`` and ``GFF3``
    formats: ``miRNA_annotation_Lach_accepted_conf.bed`` and
    ``miRNA_annotation_Lach_accepted_conf.gff3``, respectively. At the same time a
    summary file is created: ``miRNAture_summary_Lach.txt`` with a numerical
    description of loci and families found on the target sequences.

I will discuss those results in the following sub-sections.

homology
--------
The homology-based results are located on the ``miRNA_prediction/`` folder. Each
selected search mode (with ``-m`` flag) create a folder with the name of the
mode (a.k.a Blast for ``blastn`` searches). In addition in the ``LOG/`` folder
stores log information about runned modes. The advantage that ``miRNAture``
posess over existing methods. 


validation
----------

evaluate and summarise
----------------------







   
.. rubric:: Footnotes

.. [#latimeria] Source: `Alberto Fernandez Fernandez / CC BY-SA <https://upload.wikimedia.org/wikipedia/commons/f/fa/Latimeria_Chalumnae_-_Coelacanth_-_NHMW.jpg>`_

.. [#species] *Anolis carolinensis*, *Branchiostoma belcheri*, *Branchiostoma floridae*, *Ciona robusta*, *Ciona savignyi*, *Danio rerio*, *Eptatretus burgeri*, *Petromyzon marinus*, *Strongylocentrotus purpuratus*, *Xenopus laevis* and *Xenopus tropicalis*.
.. [#nohomology] Select this option to avoid running the ``homology`` stage, but
   run all the ``miRNAture`` pipeline.
.. [#ImportantNote] Pre-calculated data should be downloaded from https://zenodo.org/record/7180160#.Y0gEfH5BzmE
